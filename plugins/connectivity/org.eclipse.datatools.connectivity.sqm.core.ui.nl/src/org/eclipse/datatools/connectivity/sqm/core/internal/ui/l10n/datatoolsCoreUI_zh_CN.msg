###############################################################################
# Copyright (c) 2001, 2008 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
# 
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
##
###
##  !!! This property file should only contain resources that are "translatable" !!!
###
##

DATATOOLS.CORE.UI.TEST = 测试

#
## Add Action
#
DATATOOLS.CORE.UI.NEW.COLUMN_NAME = 列 
DATATOOLS.CORE.UI.NEW.SCHEMA_NAME = 架构
DATATOOLS.CORE.UI.NEW.TABLE_NAME = 表
DATATOOLS.CORE.UI.NEW.TRIGGER_NAME = 触发器
DATATOOLS.CORE.UI.NEW.DOMAIN_NAME = 域
DATATOOLS.CORE.UI.NEW.SEQUENCE_NAME = 序列
DATATOOLS.CORE.UI.NEW.STORED_PROCEDURE_NAME = 存储过程
DATATOOLS.CORE.UI.NEW.DATABASE = 新建数据库

#
## Label Decorations
#
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.DECORATION = 数据修饰符设置:
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.TAB = 文本
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.FORMAT = 指定资源浏览器中各列的显示格式:
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.CFORMAT = 列格式(&C):
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.VARIABLE = 添加变量(&V)...
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.EXAMPLE = 示例(&E):
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.TITLE = 添加变量
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.MESSAGE = 选择要添加至修饰格式的变量:
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.DATATYPE_DESC = {datatype} - 列数据类型
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.NULLABLE_DESC = {nullable} - 指示该列是可空的
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.PK_DESC = {primaryKey} - 指示该列属于主键约束
DATATOOLS.CORE.UI.PREFERENCES.COLUMN.FK_DESC = {foreignKey} - 指示该列属于外键约束

DATATOOLS.CORE.UI.STATUS.CONNECTION = {0} - 连接“{1}”
DATATOOLS.CORE.UI.STATUS.PROJECT = {0} - 项目“{1}”

#
## Model Explorer Strings
#
DATATOOLS.CORE.UI.EXPLORER.DEPENDENCY=外部相关性

#
## Commands
#
DATATOOLS.CORE.UI.COMMAND.RENAMING = 重命名
DATATOOLS.CORE.UI.COMMAND.ADD_DATABASE = 添加数据库
DATATOOLS.CORE.UI.COMMAND.ADD_FOREIGN_KEY_INDEX= 添加外键索引
DATATOOLS.CORE.UI.COMMAND.ADD_PRIMARY_KEY_INDEX= 添加主键索引
DATATOOLS.CORE.UI.COMMAND.ADD_SEQUENCE= 添加序列
DATATOOLS.CORE.UI.COMMAND.ADD_INDEX = 添加索引
DATATOOLS.CORE.UI.COMMAND.ADD_CHECK_CONSTRAINT = 添加检查约束
DATATOOLS.CORE.UI.COMMAND.ADD_ALIAS = 添加别名
DATATOOLS.CORE.UI.COMMAND.ADD_UNIQUE_CONSTRAINT = 添加唯一约束

#
## Explorer Description
#
DATATOOLS.CORE.UI.EXPLORER.MULTI_SELECTION= 已选择 {0} 项

#
## DnD Actions
#
DATATOOLS.CORE.UI.DND.MOVE = 移动
DATATOOLS.CORE.UI.DND.COPY = 复制
DATATOOLS.CORE.UI.DND.LINK = 链接

#
## Quick Fix
#
DATATOOLS.CORE.UI.QUICKFIX.ADD_DANGLING = 将悬挂引用添加至模型
DATATOOLS.CORE.UI.QUICKFIX.REMOVE_DANGLING = 从模型中除去悬挂引用

#
## FE Action
#
GENERATE_DDL_MENU_TEXT = 生成 DDL(&D)...

#
## FE and RE Wizards
#
FE_WIZARD_TITLEBAR_TEXT = 生成 DDL
FE_WELCOME_PAGE_TITLE_TEXT = 欢迎使用正向工程向导 
FE_WELCOME_PAGE_DESCRIPTION_TEXT = 此向导将引导您完成通过数据模型\n生成 DDL 脚本的过程。您将能够保存脚本\n并可选择在数据库上执行该脚本。\r\n \r\n  ...要继续，请单击“下一步”... 
FE_COMPLETION_PAGE_TITLE_TEXT = 正在完成正向工程向导 
FE_COMPLETION_PAGE_DESCRIPTION_TEXT = 您已成功地完成了正向工程向导。 
FE_SELECT_OPTIONS_PAGE_HEADER_TITLE	= 选择模型元素 
FE_SELECT_OPTIONS_PAGE_HEADER_SUBTITLE = 选择要生成到 DDL 脚本中的模型元素。 
FE_SELECT_DATABASE_PAGE_HEADER_TITLE = 保存并运行 DDL 
FE_SELECT_DATABASE_PAGE_HEADER_SUBTITLE = 指定用于保存生成的 DDL 脚本的路径。可通过提供数据库连接信息来运行 DDL 脚本。 
FE_PROGRESS_BAR_PAGE_HEADER_TITLE = 正在生成 DDL 
FE_PROGRESS_BAR_PAGE_HEADER_SUBTITLE = 请等待正向工程进程完成。 
COMPLETION_PAGE_TITLE_FONT = Verdana
GENERATE_NO_MNEMONIC_LABEL_TEXT	= 生成: 
DROP_STATEMENTS_CHECKBOX_TEXT = DROP 语句(&D) 
TABLES_CHECKBOX_TEXT = 表(&T) 
TRIGGERS_CHECKBOX_TEXT_2 = 触发器(&R) 
FULLY_QUALIFIED_NAMES_CHECKBOX_TEXT	= 全限定名称(&F) 
COMMENTS_CHECKBOX_TEXT = 注释(&C) 
VIEWS_CHECKBOX_TEXT = 视图(&V) 
QUOTED_IDENTIFIERS_CHECKBOX_TEXT = 带引号的标识符(&Q) 
INDEXES_CHECKBOX_TEXT = 索引(&I) 
TRIGGERS_CHECKBOX_TEXT=	触发器(&T)
STORED_PROCEDURES_CHECKBOX_TEXT	= 存储过程(&S)
TABLESPACES_CHECKBOX_TEXT = 表空间(&A)
FILE_PATH_LABEL_TEXT = 文件名(&F):
BROWSE_BUTTON_TEXT_2 = 浏览(&R)... 
EXECUTE_CHECKBOX_TEXT =	运行(&R) 
FORWARD_SLASH_SQL_DELIMITER_CHECKBOX_TEXT = 将“/”用作 SQL 语句定界符(&U) 
DEFAULT_FILE_EXTENSION = .ddl
FILE_FILTER_SCRIPT_FILES = *.ddl;*.sql
FILE_FILTER_ALL_FILES =	*.*
FILE_FILTER_NAME_SCRIPT_FILES =	脚本文件 (*.ddl;*.sql)
FILE_FILTER_NAME_ALL_FILES = 所有文件(*.*)

#
## SQL View Menu
#
DATATOOLS.CORE.UI.SQLVIEW.LINK=使用编辑器链接
DATATOOLS.CORE.UI.SQLVIEW.GENERATE=从编辑器生成 SQL

#
## Bookmark
#
DATATOOLS.PROJECT.UI.BOOKMARK.TITLE=添加书签
DATATOOLS.PROJECT.UI.BOOKMARK.MESSAGE=输入书签名称:

#
## Inactive Relationship
#
DATATOOLS.PROJECT.UI.INACTIVE_RELATIONSHIP = 隐式

#
## Filtering Decoration
#
DATATOOLS.SERVER.UI.EXPLORER.FILTER_DECORATION = [已筛选]

#
## Catalog Util
#
DATATOOLS.CORE.UI.LOADING=正在加载

DATATOOLS.CORE.UI.DIALOGS.FILTERLISTSELECTIONDIALOG.MESSAGE=选择元素:
DATATOOLS.CORE.UI.DIALOGS.FILTERLISTSELECTIONDIALOG.TITLE=选择元素
DATATOOLS.CORE.UI.DIALOGS.FILTERLISTSELECTIONDIALOG.FILTERLABEL=应用名称筛选器 (? = 任意字符，* = 任意字符串):

#
## Output Preferences
#
DATATOOLS.CORE.UI.PREFERENCES.OUTPUT.DESCRIPTION = 可指定返回的结果集的首选项。
DATATOOLS.CORE.UI.PREFERENCES.OUTPUT.LIMIT_ROWS_RETRIEVED = 限定检索的行数(&L)
DATATOOLS.CORE.UI.PREFERENCES.OUTPUT.MAX_ROW_RETRIEVED = 要检索的最大行数(&R):
DATATOOLS.CORE.UI.PREFERENCES.OUTPUT.MAX_LOB_LENGTH = 要针对字符或二进制列检索的最大字节数(&M):
DATATOOLS.CORE.UI.PREFERENCES.OUTPUT.ERROR_INVALID_INT = 指定介于 {0} 和 {1} 之间的值

#
## Index and Trigger Decorations
#
DATATOOLS.CORE.UI.INDEX_UNIQUE.DECORATION = UNIQUE
DATATOOLS.CORE.UI.TRIGGER_UPDATE.DECORATION = UPDATE
DATATOOLS.CORE.UI.TRIGGER_DELETE.DECORATION = DELETE
DATATOOLS.CORE.UI.TRIGGER_INSERT.DECORATION = INSERT
DATATOOLS.CORE.UI.TRIGGER_BEFORE.DECORATION = BEFORE
DATATOOLS.CORE.UI.TRIGGER_AFTER.DECORATION = AFTER
DATATOOLS.CORE.UI.TRIGGER_INSTEADOF.DECORATION = INSTEAD OF

#
## Resource Chooser Dialog
#
_UI_TITLE_FILE_CHOOSER = 文件选择
_UI_TITLE_FOLDER_CHOOSER = 文件夹选择
_UI_DESCRIPTION_FILE = 输入或选择文件:
_UI_DESCRIPTION_FOLDER = 输入或选择父文件夹:
_UI_DEFAULT_MSG_NEW_ALLOWED = 输入或选择父文件夹(&E):
_UI_DEFAULT_MSG_SELECT_ONLY = 选择文件夹:

#
## Filter Dialog
#
_UI_TITLE_FILTER_DIALOG = 连接筛选器属性
_UI_TITLE_FILTER = 指定筛选器
_UI_DESCRIPTION_FILTER = 通过选择谓词并输入值或通过指示是包含还是排除选择的项目来指定筛选器。
_UI_DESCRIPTION_SELECTION_ONLY = 通过指示是包含还是排除选择的项目来指定筛选器。
_UI_DESCRIPTION_EXPRESSION_ONLY = 通过选择谓词并输入值来指定筛选器。
_UI_RADIO_BUTTON_EXPRESSION = 表达式(&E)
_UI_LABEL_EXPRESSION = 名称(&N)
_UI_COMBO_STARTS_WITH = 以字符开头
_UI_COMBO_NOT_START_WITH = 不以字符开头
_UI_COMBO_CONTAINS = 包含字符
_UI_COMBO_NOT_CONTAIN = 不包含字符
_UI_COMBO_ENDS_WITH = 以字符结尾
_UI_COMBO_NOT_END_WITH = 不以字符结尾
_UI_RADIO_BUTTON_SELECTION = 选择(&L)
_UI_COMBO_INCLUDE_ITEMS = 包含选定的项目:
_UI_COMBO_EXCLUDE_ITEMS = 排除选定的项目:
_UI_BUTTON_SELECT_ALL = 全选(&S)
_UI_BUTTON_DESELECT_ALL = 取消全选(&D)
_UI_CHECKBOX_DISABLE_FILTER = 禁用筛选器(&I)
_UI_MESSAGE_CRITERIA_REQUIRED = 请指定筛选条件。
_UI_MESSAGE_NO_QUOTES = 表达式值不能包含引号。
_UI_MESSAGE_SELECTION_REQUIRED = 请至少选择一个项目。
_UI_SP_FILTER_PAGE_TITLE = 存储过程筛选器属性
_UI_TABLE_FILTER_PAGE_TITLE = 表筛选器属性
_UI_SCHEMA_FILTER_PAGE_TITLE = 架构筛选器属性
_UI_TOOLTIP_NEW = 新建
_UI_TOOLTIP_DELETE = 删除
_UI_RADIO_BUTTON_AND = 满足所有条件
_UI_RADIO_BUTTON_OR = 满足任一条件
_UI_COMBO_PREDICATE = 谓词
_UI_TEXT_VALUE = 值

#
## Actions for Schema Management
#
SCHEMA_MANAGEMENT_CREATE_SCHEMA = 架构
SCHEMA_MANAGEMENT_CREATE_TABLE = 表
SCHEMA_MANAGEMENT_CREATE_VIEW = 视图
SCHEMA_MANAGEMENT_CREATE_INDEX = 索引
SCHEMA_MANAGEMENT_CREATE_BUFFER_POOL = 缓冲池
SCHEMA_MANAGEMENT_CREATE_PARTITION_GROUP = 分区组
SCHEMA_MANAGEMENT_CREATE_DISTINCT_TYPE = 单值用户定义类型
SCHEMA_MANAGEMENT_CREATE_STRUCTURED_TYPE = 结构化用户定义类型
SCHEMA_MANAGEMENT_CREATE_ARRAY_TYPE = 数组数据类型
SCHEMA_MANAGEMENT_CREATE_ROW_TYPE = 行数据类型
SCHEMA_MANAGEMENT_CREATE_SEQUENCE = 序列
SCHEMA_MANAGEMENT_CREATE_MQT = MQT
SCHEMA_MANAGEMENT_CREATE_ALIAS = 别名
SCHEMA_MANAGEMENT_CREATE_TRIGGER = 触发器
SCHEMA_MANAGEMENT_CREATE_ROLE = 角色
SCHEMA_MANAGEMENT_CREATE_USER = 用户
SCHEMA_MANAGEMENT_CREATE_GROUP = 组
#
SCHEMA_MANAGEMENT_ADD_COLUMN = 列
SCHEMA_MANAGEMENT_ADD_CHECK_CONSTRAINT = 检查约束
SCHEMA_MANAGEMENT_ADD_UNIQUE_CONSTRAINT = 唯一约束
SCHEMA_MANAGEMENT_ADD_FOREIGN_KEY = 外键
