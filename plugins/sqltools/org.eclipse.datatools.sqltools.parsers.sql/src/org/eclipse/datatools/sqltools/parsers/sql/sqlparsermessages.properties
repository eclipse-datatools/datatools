# NLS_MESSAGEFORMAT_VAR          needed to handle quotes correctly
#
# File: sqlparsermessages.properties
# Description: Properties file for classes in the SQLParser Plugin

# ==============================================================================
# Copyright (c) 2000, 2005 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials 
# are made available under the terms of the Eclipse Public License 2.0
# which is available at
# https://www.eclipse.org/legal/epl-2.0/
# 
# Contributors:
#     IBM Corporation - initial API and implementation
# ==============================================================================

# "token" is a technical term used in the context of parsers, might not be translated
# "terminal symbol" might be used instead or used as source for tranlation, it is the
# smallest unit in a parser input, like a keyword, identifier or a special single character
!
# Strings for SQL parser error messages

# Attention translators: mnemonics (short keys, marked with "&") can vary in translations
# message values should not use the mnemonics "reserved" for standard buttons like "Back", "Next", "Finish"

SQLParserException.GENERAL_MESSAGE=Unable to parse the input: "{0}".
SQLParseErrorInfo.NO_CORRECTION_AVAILABLE = No correction available.

! "token" is a technical term, see note above
SQLParserException.LEX_ERROR_CODE 		= Unexpected character "{0}" ignored.
SQLParserException.ERROR_CODE 			= Parsing terminated at this token "{0}".
SQLParserException.BEFORE_CODE			= "{0}" inserted before this token "{1}".
SQLParserException.INSERTION_CODE 		= "{0}" expected after this token "{1}".
SQLParserException.INVALID_CODE   		= Unexpected input discarded "{0}".
SQLParserException.SUBSTITUTION_CODE  	= "{0}" expected instead of this input "{1}".
SQLParserException.SECONDARY_CODE 		= "{0}" expected instead of this input "{1}".
SQLParserException.DELETION_CODE  		= Unexpected token(s) "{0}" ignored.
SQLParserException.MERGE_CODE 			= "{0}" formed from merged tokens.
SQLParserException.MISPLACED_CODE 		= Misplaced construct(s) "{0}".
SQLParserException.SCOPE_CODE 			= "{0}" inserted to complete scope.
SQLParserException.EOF_CODE   			= End-of-file reached after token "{0}".
SQLParserException.INVALID_TOKEN_CODE 	= "{0}" is invalid.

! Note to translater: statement is a well known term related to the SQL language
SQLParserManager.MULTIPLE_STATEMENTS  	= Multiple SQL statements are not allowed in this context.

#
# following message keys not yet in use, for future release
#

DATATOOLS.PROJECT.DEV.PROP.PRESERVE_USER_FORMAT 	= &Preserve formatting of SQL source text
DATATOOLS.PROJECT.DEV.PROP.ALWAYS_QUALIFY_COLUMNS   = &Qualify unambiguous column references in SQL source text

! the following decribes that we try to be smart and figure out column references
! in the SQL source, even when not correctly specified, we correct the input then, e.g. SELECT tableA.col1 FROM schema1.tableA AS TA would be corrected to SELECT TA.col1 FROM schema1.tableA AS TA
DATATOOLS.PROJECT.DEV.PROP.SMART_RESOLVING  		= Automatically &correct qualification of column references in SQL source text


