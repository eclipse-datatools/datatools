# NLS_MESSAGEFORMAT_VAR          needed to handle quotes correctly
#
# File: sqlqueryparsermessage.properties
# Description: Properties file for classes in the SQLQueryParser Plugin

# ==============================================================================
# Copyright (c) 2004, 2005 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials 
# are made available under the terms of the Eclipse Public License 2.0
# which is available at
# https://www.eclipse.org/legal/epl-2.0/
# ==============================================================================

DataTypeResolver.DATA_TYPE_UNDETERMINED 		= The data type of "{0}" could not be determined.
DataTypeResolver.VARIABLE_TYPE_UNDETERMINED 	= The data type of variable "{0}" could not be determined.
DataTypeResolver.DATA_TYPES_INCOMPATIBLE		= The data types of "{0}" and "{1}" are incompatible.

TableReferenceResolver.SCHEMAS_NOT_LOADED   	= Unable to find database schemas. Check database connection "{0}".
TableReferenceResolver.UNRESOLVED_COLUMN		= Unable to find table for column "{0}".
TableReferenceResolver.UNRESOLVED_TABLE			= Unable to find table "{0}".
TableReferenceResolver.TABLE_HAS_NO_SUCH_COLUMN	= Table "{0}" does not contain column "{1}".
TableReferenceResolver.AMBIGUOUS_COLUMN			= Column name "{0}" is ambiguous.
TableReferenceResolver.AMBIGUOUS_TABLE			= Table name "{0}" is ambiguous.
TableReferenceResolver.AMBIGUOUS_TABLE_ALIAS	= Table alias "{0}" is ambiguous.

RoutineReferenceResolver.UNRESOLVED_PROC        = Unable to find procedure.
RoutineReferenceResolver.INCORRECT_PARM_COUNT	= Incorrect number of parameters.

#
# following messages to translate names of syntax rules that were violated and caused parser error
# fill-ins - no sentences! first letter should be lower case if not a KEYWORD
#
! uppercase words are keywords and not to be translated
! "predicate" is a SQL language term equivalent to the word "test"
! "term", "factor" are closely related to mathematical terms "term" and "factor"
SQLQueryParser.<alias_name> 					= alias name
SQLQueryParser.<all_or_any_cond>		 		= quantified comparison
SQLQueryParser.<as_alias> 						= AS alias name
SQLQueryParser.<boolean_expression>				= Boolean value expression
SQLQueryParser.<boolean_factor> 				= Boolean factor
SQLQueryParser.<boolean_primary> 				= Boolean primary
SQLQueryParser.<boolean_term> 					= Boolean term
SQLQueryParser.<boolean_values> 				= truth value
SQLQueryParser.<case_expression> 				= CASE expression
SQLQueryParser.<case_search_when> 				= WHEN-THEN condition
SQLQueryParser.<case_search_when_list> 			= list of WHEN-THEN conditions
SQLQueryParser.<case_simple_when> 				= WHEN-THEN expression
SQLQueryParser.<case_simple_when_list>	 		= list of WHEN-THEN expressions
SQLQueryParser.<cast_expression> 				= CAST expression
SQLQueryParser.<column> 						= column
SQLQueryParser.<column_name> 					= column name
SQLQueryParser.<column_name_list> 				= list of column names
SQLQueryParser.<column_ref> 					= column reference
SQLQueryParser.<condition> 						= condition
SQLQueryParser.<constant> 						= simple value
SQLQueryParser.<datatype> 						= data type
SQLQueryParser.<datatype_array_type> 			= ARRAY data type
SQLQueryParser.<datatype_binary> 				= binary data type
SQLQueryParser.<datatype_predefined>			= predefined data type
SQLQueryParser.<datatype_character> 			= character data type
SQLQueryParser.<datatype_character_national>	= national character data type
SQLQueryParser.<datatype_collection_type> 		= collection data type
SQLQueryParser.<datatype_date> 					= date data type
SQLQueryParser.<datatype_multiset_type> 		= MULTISET data type
SQLQueryParser.<datatype_numerical> 			= numerical data type
SQLQueryParser.<datatype_numerical_approximate>	= approximate numerical data type
SQLQueryParser.<datatype_numerical_exact> 		= exact numerical data type
SQLQueryParser.<datatype_numerical_fixed_precision>	= fixed precision numerical data type
SQLQueryParser.<datatype_numerical_integer> 	= integer data type
SQLQueryParser.<datatype_opt_size_unit> 		= data type length multiplier (K, M or G)
SQLQueryParser.<datatype_time> 					= time data type
SQLQueryParser.<datatype_user_defined_distinct>	= distinct user-defined data type
SQLQueryParser.<delete_stmt> 					= DELETE statement
SQLQueryParser.<duration> 						= duration
SQLQueryParser.<exists> 						= EXISTS predicate
SQLQueryParser.<expression> 					= value expression
SQLQueryParser.<expression_commalist> 			= comma-separated list of value expressions
SQLQueryParser.<expression_commalist_multiple_elements>	= comma-separated list of value expressions (multiple elements)
SQLQueryParser.<expression_factor> 				= value expression factor
SQLQueryParser.<expression_term>		 		= value expression term
SQLQueryParser.<func_ref> 						= function reference
SQLQueryParser.<function> 						= function
SQLQueryParser.<grouping> 						= GROUP BY clause
SQLQueryParser.<grouping_exp> 					= grouping expression
SQLQueryParser.<grouping_sets> 					= GROUPING SETS
SQLQueryParser.<grouping_sets_element> 			= GROUPING SETS element
SQLQueryParser.<grouping_sets_element_exp> 		= GROUPING SETS element expression
SQLQueryParser.<grouping_sets_element_exp_list>	= list of GROUPING SETS element expressions
SQLQueryParser.<grouping_sets_element_list> 	= list of GROUPING SETS elements
SQLQueryParser.<grouping_spec> 					= GROUP BY specification
SQLQueryParser.<grouping_spec_list> 			= list of GROUP BY specifications
SQLQueryParser.<identifier> 					= identifier
SQLQueryParser.<in_cond> 						= IN predicate
SQLQueryParser.<insert_row> 					= insert row
SQLQueryParser.<insert_row_commalist> 			= comma-separated list of insert rows
SQLQueryParser.<insert_stmt> 					= INSERT statement
SQLQueryParser.<intervaltest> 					= BETWEEN predicate
SQLQueryParser.<liketest> 						= LIKE predicate
! "predicate" here could also be "test" 
SQLQueryParser.<nulltest> 						= NULL predicate
SQLQueryParser.<opt_all_distinct> 				= ALL or DISTINCT
SQLQueryParser.<opt_as> 						= optional AS
SQLQueryParser.<opt_as_alias> 					= optional AS alias name
SQLQueryParser.<opt_as_target_table> 			= optional AS target table
SQLQueryParser.<opt_asc_desc> 					= optional ASC or DESC
SQLQueryParser.<opt_case_else> 					= optional ELSE case
SQLQueryParser.<opt_column_name_list> 			= optional list of column names
SQLQueryParser.<opt_escape> 					= optional ESCAPE expression
SQLQueryParser.<opt_expression_commalist> 		= optional comma-separated list of value expressions
SQLQueryParser.<opt_group_by_clause> 			= optional GROUP BY clause
SQLQueryParser.<opt_having_clause> 				= optional HAVING clause
SQLQueryParser.<opt_join_type> 					= optional JOIN type
SQLQueryParser.<opt_join_type_outer> 			= optional OUTER
SQLQueryParser.<opt_order_by_clause> 			= optional ORDER BY clause
! "Schema" is a database related term
SQLQueryParser.<opt_schema_dot> 				= optional schema qualifier
! "table" is a database related term
SQLQueryParser.<opt_table_correlation> 			= optional table alias
SQLQueryParser.<opt_target_column_list> 		= optional list of target columns
SQLQueryParser.<opt_where_clause> 				= optional WHERE clause
SQLQueryParser.<ordering_spec> 					= ordering specification
SQLQueryParser.<ordering_spec_commalist> 		= comma-separated list of ordering specifications
SQLQueryParser.<parameter> 						= parameter
SQLQueryParser.<project> 						= selection
SQLQueryParser.<query_combined> 				= combined query
SQLQueryParser.<query_combined_operator>		= combined query operator UNION, EXCEPT, or INTERSECT
SQLQueryParser.<query_exp>						= query expression
SQLQueryParser.<query_exp_root>					= query expression
SQLQueryParser.<query_select>					= SELECT query
SQLQueryParser.<query_stmt>						= SQL query statement
SQLQueryParser.<query_term>						= query term
SQLQueryParser.<query_values>					= VALUES table constructor
SQLQueryParser.<relop>							= relational operator
SQLQueryParser.<scalcomp>						= scalar comparison
SQLQueryParser.<schema>							= schema
SQLQueryParser.<selection>						= selection
SQLQueryParser.<simplecomp>						= simple comparison
SQLQueryParser.<special_register>				= special register
SQLQueryParser.<sql_dml_stmt>					= SQL DML statement
SQLQueryParser.<sql_dml_stmt_list>				= list of SQL DML statements
SQLQueryParser.<sql_dml_stmt_xspan>				= list of SQL DML statements
SQLQueryParser.<subquery>						= subquery
SQLQueryParser.<super_groups>					= CUBE or ROLLUP grouping
SQLQueryParser.<super_groups_element>			= grouping expression
SQLQueryParser.<super_groups_element_exp>		= grouping expression
SQLQueryParser.<super_groups_element_exp_list>	= list of grouping expressions
SQLQueryParser.<super_groups_element_list>		= list of grouping expressions
SQLQueryParser.<table>							= table
SQLQueryParser.<table_correlation>				= table alias
SQLQueryParser.<table_join>						= joined table
SQLQueryParser.<table_name_or_alias> 			= table name or table alias
SQLQueryParser.<table_query>					= nested table query
SQLQueryParser.<table_ref>						= table reference
SQLQueryParser.<table_ref_commalist>			= comma-separated list of table references
SQLQueryParser.<target_column_list>				= list of target columns
SQLQueryParser.<target_table>					= target table
SQLQueryParser.<update_assignment_clause>		= UPDATE assignment clause
SQLQueryParser.<update_assignment_expression>	= UPDATE assignment expression
SQLQueryParser.<update_assignment_expression_commalist>	= comma-separated list of update assignment expressions
SQLQueryParser.<update_stmt>					= UPDATE statement
SQLQueryParser.<values_row>						= values row
SQLQueryParser.<values_row>						= values row
SQLQueryParser.<values_row_commalist>			= comma-separated list of values rows
SQLQueryParser.<with_clause>					= WITH clause
SQLQueryParser.<with_table_spec>				= WITH table specification
SQLQueryParser.<with_table_spec_list>			= list of WITH table specifications



SQLQueryDB2Parser.<olap_aggregation_function>	= OLAP aggregation function
SQLQueryDB2Parser.<olap_current_row>			= CURRENT ROW
SQLQueryDB2Parser.<olap_function>				= OLAP function
SQLQueryDB2Parser.<olap_group_end>				= FOLLOWING expression
SQLQueryDB2Parser.<olap_group_start>			= PRECEDING expression
SQLQueryDB2Parser.<olap_group_type>				= OLAP grouping type
SQLQueryDB2Parser.<olap_numbering_function>		= OLAP numbering function
SQLQueryDB2Parser.<olap_order_by_expression>	= OLAP ORDER BY expression
SQLQueryDB2Parser.<olap_order_by_list>			= list of OLAP ORDER BY expressions
SQLQueryDB2Parser.<olap_partitioning_expression_list>	= list of OLAP partitioning expressions
SQLQueryDB2Parser.<olap_partitioning_expression>		= OLAP partitioning expression
SQLQueryDB2Parser.<olap_rank_or_dense_rank>				= RANK() or DENSE_RANK()
SQLQueryDB2Parser.<olap_ranking_function>				= OLAP ranking function
SQLQueryDB2Parser.<olap_rows_or_range>					= ROWS or RANGE
SQLQueryDB2Parser.<olap_window_order_clause>			= OLAP window order clause
SQLQueryDB2Parser.<opt_olap_asc_desc>					= OLAP ASC/DESC specification
SQLQueryDB2Parser.<opt_olap_window_aggregation_group>	= optional OLAP window aggregation group
SQLQueryDB2Parser.<opt_olap_window_order_agregration_group>	= optional OLAP window order agregration group
SQLQueryDB2Parser.<opt_olap_window_order_clause>			= optional OLAP window order clause
SQLQueryDB2Parser.<opt_olap_window_parition_clause>			= optional OLAP window parition clause

SQLQueryDB2Parser.<opt_xml_element_attributes_function>		= optional XMLATTRIBUTES function
SQLQueryDB2Parser.<opt_xml_element_content_list>			= optional list of XML element content expressions
SQLQueryDB2Parser.<opt_xml_element_namespaces_function>		= optional XMLNAMESPACES function
SQLQueryDB2Parser.<opt_xml_forest_namespaces_function>		= optional XMLNAMESPACES function
SQLQueryDB2Parser.<xml_agg_function>			= XMLAGG function
SQLQueryDB2Parser.<xml_attribute_list>			= list of XML attribute expressions
SQLQueryDB2Parser.<xml_attribute>				= XML attribute expression
SQLQueryDB2Parser.<xml_attributes_function>		= XMLATTRIBUTES function
SQLQueryDB2Parser.<xml_concat_function>			= XMLCONCAT function
SQLQueryDB2Parser.<xml_element_content_list>	= list of XML element content expressions
SQLQueryDB2Parser.<xml_element_content>			= XML element content expression
SQLQueryDB2Parser.<xml_element_function>		= XMLELEMENT function
SQLQueryDB2Parser.<xml_forest_element_list>		= list of XML forest elements
SQLQueryDB2Parser.<xml_forest_element>			= XMLFOREST element expression
SQLQueryDB2Parser.<xml_forest_function>			= XMLFOREST function XMLSERIALIZE or XML2CLOB
SQLQueryDB2Parser.<xml_function>				= XML function 
SQLQueryDB2Parser.<xml_namespace_list>			= list of XML namespaces
SQLQueryDB2Parser.<xml_namespace_prefix>		= XML namespace prefix
SQLQueryDB2Parser.<xml_namespace_uri>			= XML namespace URI
SQLQueryDB2Parser.<xml_namespace>				= XML namespace
SQLQueryDB2Parser.<xml_namespaces_function>		= XMLNAMESPACES function
SQLQueryDB2Parser.<xml_value_datatype>			= XML value data type
SQLQueryDB2Parser.<xml_value_function_list>		= list of XML value functions
SQLQueryDB2Parser.<xml_value_function>			= XML value function


